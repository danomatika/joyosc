<?xml version="1.0" ?>
<joyosc>

	<!-- OSC receive settings  (default: 7770) -->
	<listening port="7770"/>

	<!-- multicast OSC receive settings -->
	<!-- <listening multicast="239.200.200.200" port="7770"/> -->

	<!-- OSC send settings (defaults: 127.0.0.1 && 8880) -->
	<sending ip="127.0.0.1" port="8880"/>

	<!-- multicast OSC send settings -->
	<!-- <sending ip="239.200.200.200" port="8880"/> -->

	<!-- OSC address settings

	     notification: base osc sending address for notifications

	     device: base osc sending address for device events

	     query: base osc sending address for queries
	-->
	<address notification="/joyosc/notifications" device="/joyosc/devices" query="/joyosc/query"/>

	<!-- app configuration

		 note: sets device defaults, overriden by commandline options,
		       overriden per-device in <controller> or <joystick>

	     printEvents: print live events to to console? bool "true" or "false"
	                  (default: false)

	     joysticksOnly: disable game controller support, use joystick
	                    interface only (default: false)

	     openWindow: open window, helps on some platforms if device events are
	                 not being received, ex. MFI controllers on macOS

	     sleepUS: how often to poll for new events in micro seconds, a smaller
	              number means faster events but more CPU time (default: 10000)

	     triggersAsAxes: report controller trigger values as button presses
	                     (default: false)
	                     note: this can be overridden per controller with the
	                     controller <axes> tag, see below

	     normalizeAxes: normalize axis values to -1 - 1

	     enableSensors: enable sensor events (accelerometer, gyro)
	                    note: this can be overridden per controller with the
	                    controller <sensors> tag, see below

	     normalizeSensors: normalize sensor values:
	                       * accel m/s^2 -> standard gs
	                       * gyro rad/s -> rotation

	     sensorRate: sensor rate limit in hz, 0 is unlimited
	 -->
	<config printEvents="false" joysticksOnly="false" openWindow="false"
	        sleepUS="20000" triggersAsAxes="false" normalizeAxes="false"
	        enableSensors="false" normalizeSensors="false" sensorRate="0"/>

	<!-- device types to for mapping names to OSC send addresses and event
	     customization, use lsjs to get the names and guids of the devices
	     currently plugged in

	     devices can be matched by name ie. "PS3 Controller" or the SDL GUID
	     (Globally Unique ID) for specific device, use lsjs to print both
	-->
	<devices>

		<!-- game controllers: higher level joystick with input mappings

		     these are joysticks with a default SDL button & axis mapping

		     you can provide a custom mapping to add or override existing
		     mappings using the <mappings> element further below

		     name or guid is required, address is optional

		     address '#' placeholder will be replaced with device index,
		     ex. "/pad#" -> "/pad0" if device is the first connected
		-->
		<controller name="Logitech F310 Gamepad (DInput)" address="/F310"/>

		<!-- match to Globally Unique ID, may be different between platforms -->
		<!-- <controller guid="03007a2e4c0500006802000000016809" address="/pad1"/> -->

		<!-- you can also customize a specific controller -->
		<controller name="Logitech F510 Gamepad (DInput)" address="/F510">

			<!-- axis behavior

			     deadZone: +/- area around the 0 point when centering an
			               axis, some devices are jittery and require a
			               larger number, (default: 3200, as per SDL
			               documentation)

			     triggers: some controllers report variable triggers as axes
			              and joyosc treats them as binary buttons by default,
			               disable this per controller by setting triggers to true
			               (default: false)
			-->
			<axes deadZone="4000" triggers="false" normalize="false"/>

			<!-- sensor behavior

			     enable: enable sensor events (accelerometer, gyro)

			     normalize: normalize sensor events:
			                * accel m/s^2 -> standard gs
			                * gyro rad/s -> rotation

			     rate: sensor rate limit in hz, 0 is unlimited
			-->
			<sensors enable="false" normalize="false" rate="0"/>

			<!-- axisDeadZone: old version of <axes deadZone> -->
			<!-- <thresholds axisDeadZone="3000"/> -->

			<!-- asAxes: old version of <axes triggers> -->
			<!-- <triggers asAxes="true"/> -->
			
			<!-- remap buttons, axes, etc; useful when trying to
			     match different controllers to send the same button presses
			     or you want to change the button and axis names
			
			     types: button, axis

			     SDL game controller button names: a, b, x, y, start, back, guide,
			     leftshoudler, lefttrigger, rightshoulder, righttrigger, leftstick,
			     rightstick, dpup, dpdown, dpleft, dpright (dp = digital pad)

			     SDL game controller axis names: leftx, lefty, rightx, righty
			-->
			<remap>
				<!-- send a button a as square button (rename completely) -->
				<button from="a" to="square"/>
				<!-- send button b as lefttrigger button -->
				<button from="b" to="lefttrigger"/>
				<!-- send left x axis as right y axis -->
				<axis from="leftx" to="righty"/>
			</remap>

			<!-- ignore buttons, axes, etc; useful if you want to save bandwidth
			     by not sending unneeded events

			     types: button, axis
			-->
			<ignore>
				<!-- ignore x button -->
				<button id="x"/>
				<!-- ignore rightx axis -->
				<axis id="rightx"/>
			</ignore>
		</controller>

		<!-- remap joystick axes which are not in the SDL controller mapping,
	         these are usually extra controls such as button pressure values -->
		<controller name="PS3 Controller" address="/ps#">
			<!-- extended: enable unmapped joystick button or axis events?
			               ex. PS3 Controller button pressure axes -->
			<remap>
				<!-- send extended joystick axis 6 as x value, etc -->
				<axis extended="true" from="6" to="a"/>
				<axis extended="true" from="7" to="b"/>
				<axis extended="true" from="8" to="x"/>
				<axis extended="true" from="9" to="y"/>
				<axis extended="true" from="10" to="leftshoulder"/>
				<axis extended="true" from="11" to="rightshoulder"/>
				<axis extended="true" from="12" to="dpup"/>
				<axis extended="true" from="13" to="dpdown"/>
				<axis extended="true" from="14" to="dpleft"/>
				<axis extended="true" from="15" to="dpright"/>
			</remap>
		</controller>

		<!-- set controller led color, if supported
		     in this case, setting the PS4 led to "black" turns it off -->
		<controller name="PS4 Controller" address="/ps4">
			<color r="0" g="0" b="0"/>
		</controller>

		<!-- joysticks: base joystick device

		    these are joysticks devices w/out game controller mappings or when
		    the game controller api is disabled via the joysticks only option
		-->
		<joystick name="Saitek P990 Dual Analog Pad" address="/bbox"/>
		<joystick name="Logitech Dual Action" address="/ps2black"/>

		<!-- like controllers, you can also customize a specific joystick -->
		<joystick name="PS2 Controller" address="/ps2">

			<!-- axis behavior

			     deadZone: +/- area around the 0 point when centering an
			               axis, some devices are jittery and require a
			               larger number, (default: 3200, as per SDL
			               documentation)
			-->
			<axes deadZone="4000"/>

			<!-- axisDeadZone: old version of <axes deadZone> -->
			<!-- <thresholds axisDeadZone="3000"/> -->
			
			<!-- remap buttons, axes, etc; useful when trying to
			     match different joysticks to send the same button presses
			
			     types: button, axis, hat, ball
			-->
			<remap>
				<!-- send button 1 as button 2 -->
				<button from="1" to="2"/>
				<!-- send axis 1 as axis 2 -->
				<axis from="1" to="2"/>
			</remap>

			<!-- ignore buttons, axes, etc; useful if you want to save bandwidth
			     by not sending unneeded events, this is especially true for
			     devices which might map an accelerometer to a set of axes

			     types: button, axis, hat, ball
			-->
			<ignore>
				<!-- ignore button 1 -->
				<button id="1"/>
				<!-- ignore axis 1 -->
				<axis id="1"/>
			</ignore>
		</joystick>

		<!-- exclude controllers or joysticks by name or GUID; useful if a
		     device appears multiple times or is in use by another application
		     and should not generate events in joyosc

			 types: controller, joystick
		-->
		<exclude>
			<controller name="Dreamcast Controller"/>
			<joystick guid="12345000000000000000000000000000"/>
		</exclude>
	</devices>

	<!-- mappings: custom SDL game controller mappings to add at runtime

	     useful if you want to remap buttons/axes or you have a device which does
	     not have a game controller mapping and only detects as a joystick

	     use lsjs -m to print the default SDL mappings for the currently plugged
	     in devices, if there is no mapping for a device, you'll need to provide
	     one here if you want the device to show up as a game controller

	     note: device names & guids may be different between platforms

	     see the following for more info:
	     - http://wiki.libsdl.org/SDL_GameControllerAddMapping
	     - https://github.com/gabomdq/SDL_GameControllerDB
	-->
	<mappings>
		<mapping>4c050000000000006802000000000000,PS3 Controller,a:b14,b:b13,back:b0,dpdown:b6,dpleft:b7,dpright:b5,dpup:b4,guide:b16,leftshoulder:b10,leftstick:b1,lefttrigger:b8,leftx:a0,lefty:a1,rightshoulder:b11,rightstick:b2,righttrigger:b9,rightx:a2,righty:a3,start:b3,x:b15,y:b12,platform:Mac OS X</mapping>

		<!-- load a file of mapping strings, path is relative to this xml file -->
		<!-- <file>gamecontrollerdb.txt</file> -->
	</mappings>

</joyosc>
